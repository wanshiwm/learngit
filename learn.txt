创建版本库 					git init
查看状态					git status
添加至暂存区 				git add <file>
提交版本库					git commin -m "备注"
比对修改					git diff <file>
查看日志        			git log / git log --pretty=oneline / git log --graph
回退版本 					git reset --hard <ID(HEAD^)>
提交记录					git reflog
还原暂存区文件				git restore --staged <file>
还原工作区文件				git restore <file>
删除文件					git rm <file>
创建key 					ssh-keygen -t rsa -C "<emailladdr>"
关联远程库					git remote add origin <githubaddr>
推送远程库					git push -u origin master / git push
查看远程库					git remote -v
删除远程库					git remote rm origin
克隆远程库					git clone <githubaddr>
创建分支					git branch <name>
切换到分支					git checkout <name> / git switch <name>
创建并切换到分支			git checkout -b <name> / git switch -b <name>
查看分支					git branch
合并指定分支				git merge <name> / git mergit --no-ff -m "备注" <name>
删除分支					git branch -d <name> / git branch -D <name>
复制某次提交到分支  		git cherry-pick <ID>
关联本地分支与远程分支		git branch --set-upstream-to=origin/<o-name> <l-name>
从远程库更新				git pull

submodule

添加子模块					git submodule add <githubaddr>
克隆带子模块的远程库1		git clone <githubaddr> --recurse-submodules
克隆带子模块的远程库2		git clone <githubaddr>
							git submodule init
							git submodule update
更新子模块					git submodule update / git pull
批量操作					git submodule foreach '<cmd>'
卸载子模块					git git submodule deinit <name>
							git rm <name>